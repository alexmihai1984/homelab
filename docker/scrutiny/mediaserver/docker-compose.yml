services:
  influxdb:
    image: influxdb:2.2
    ports:
      - 2086:8086
    volumes:
      - influxdb-data:/var/lib/influxdb2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 5s
      timeout: 10s
      retries: 20
    networks:
      - scrutiny-network

  web:
    image: ghcr.io/analogj/scrutiny:master-web
    ports:
      - 2080:8080
    volumes:
      - scrutiny-data:/opt/scrutiny/config
    environment:
      SCRUTINY_WEB_INFLUXDB_HOST: 'influxdb'
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 10s
    networks:
      - scrutiny-network

  collector:
    image: ghcr.io/analogj/scrutiny:master-collector
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    volumes:
      - '/run/udev:/run/udev:ro'
    environment:
      COLLECTOR_API_ENDPOINT: 'http://web:8080'
      COLLECTOR_HOST_ID: 'mediaserver'
      # If true forces the collector to run on startup (cron will be started after the collector completes)
      # see: https://github.com/AnalogJ/scrutiny/blob/master/docs/TROUBLESHOOTING_DEVICE_COLLECTOR.md#collector-trigger-on-startup
      COLLECTOR_RUN_STARTUP: false
    depends_on:
      web:
        condition: service_healthy
    devices:
      - "/dev/sda2"
      - "/dev/sdb2"
      - "/dev/sdc2"
    networks:
      - trilium-network

volumes:
  influxdb-data: {}
  scrutiny-data: {}

networks:
  scrutiny-network:
    name: scrutiny-network